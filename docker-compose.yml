version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: sputnik-postgres
    environment:
      POSTGRES_DB: sputnik_core_dev
      POSTGRES_USER: sputnik_user
      POSTGRES_PASSWORD: sputnik_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - sputnik-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: sputnik-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sputnik-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: Redis Commander for Redis GUI
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: sputnik-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - sputnik-network
    depends_on:
      - redis
    profiles:
      - tools

  # Optional: pgAdmin for PostgreSQL GUI
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: sputnik-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@sputnik-core.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - sputnik-network
    depends_on:
      - postgres
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  sputnik-network:
    driver: bridge
